

        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("<p>hello, world to default location</p>")
            }
        }
        location /json {
            charset       utf-8;
            charset_types application/json;
            default_type  application/json;
            content_by_lua '
                local cjson = require "cjson"
                ngx.status  = ngx.HTTP_OK
                ngx.say(cjson.encode({ status = true, foobar = "string" }))
                return ngx.exit(ngx.HTTP_OK)
            ';
        }


        location /params {
            default_type text/html;
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                local response = "<html><body><h1>Request Parameters</h1><ul>"
                for key, val in pairs(args) do
                    if type(val) == "table" then
                        response = response .. "<li>" .. key .. " : " .. table.concat(val, ", ") .. "</li>"
                    else
                        response = response .. "<li>" .. key .. " : " .. val .. "</li>"
                    end
                end
                response = response .. "</ul></body></html>"
                ngx.say(response)
            }
        }
        #http://localhost:1234/attack?attack=%22%3Cscript%3Ealert(1)%3C/script%3E%22
        location /xss-attack {
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                ngx.header.content_type = 'text/html'
                local response = "<html><body>"

                for key, val in pairs(args) do
                    if key == "xss-value" then
                       response = response ..  val 
                    end
                end

                response = response .. "</body></html>"
                ngx.say(response)
            }
        }
        location /set-csp-header {
            content_by_lua '
                ngx.req.read_body()
                local request_body = ngx.req.get_body_data()  
                local file = io.open("${NGINX_CONFIG_FILE}", "w+b")
                file:write(request_body)
                file:close()
            ';
        }

    