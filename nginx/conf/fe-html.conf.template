##
# Frontend server that serves up html, js, css, etc
# and embedded CSP controls
##

    root   /usr/local/openresty/nginx/html/;
    index  index.html index.htm;


    # create random nonce value for CSP that is used by all the pages
    set_secure_random_alphanum $cspNonce 32;

    # nginx error logging to debug.log if needed, otherwise comment out
    error_log ${NGINX_ERR_OUTPUT} ${NGINX_ERR_MODE};    

    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location / {


        ## send logs to here
        add_header Reporting-Endpoints  $NGX_CSP_REPORTING_SERVER;
        # no caching
        add_header Server "ngx-default";
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache';
        add_header Access-Control-Allow-Origin "*";
        ## pull in policy from shared volume with new config submitted
        ## by user and updated every 5 seconds
        try_files $uri $uri/ /index.html;
    }

	# Part of class training, no csp policy
	location ~ ^/(xss|csp)/ {
        # no caching
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache';
        add_header Access-Control-Allow-Origin "*";
        include $NGINX_CSP_CONFIG_FILE;
            try_files $uri $uri/ /index.html;
	}


	# Part of class training, no csp policy for front end
    # pages
	location ~ ^/(cors|csrf|xss/index.html|common.js)/ {
        # no caching
        add_header Last-Modified $date_gmt;
        add_header Server ngx-csp1;
        add_header Cache-Control 'no-store, no-cache';
        add_header Access-Control-Allow-Origin "*";
            try_files $uri $uri/ /index.html;
	}

    #### This is used to duplicate endpoints that
    #### Normally occur in the CORS backend because
    #### the front-end is at port 7443, and CORS testing
    #### will test Cross Origin requests, from 7443 to 9443 (CORS backend)
    #### as well as 7443 to 7443 this server with duplicate endpoints
    #### which is NOT a Cross Origin call to prove that no CORs headers
    #### are required.
    include /etc/nginx/conf.d/cors-be.conf;
